pr: none
trigger: none

schedules:
- cron: "0 0 * * *"
  displayName: Daily
  branches:
    include:
    - main
  always: true

parameters:
- name: branches
  type: object
  default:
  - 202205
  - 202305
  - 202405
- name: subs
  type: string
  default: "src/sonic-utilities src/sonic-swss src/sonic-platform-common src/sonic-platform-daemons"

resources:
  repositories:
  - repository: buildimage
    type: github
    name: Azure/sonic-buildimage-msft
    endpoint: build

pool: sonic-ubuntu-1c
variables:
  - group: sonicbld

steps:
  - checkout: buildimage
    clean: true
  - bash: |
      set -ex
      sudo apt update
      sudo apt install -y gh
      curl -sL https://aka.ms/InstallAzureCLIDeb | sudo bash
      git remote add head https://github.com/sonic-net/sonic-buildimage
      git remote update
      git config --global user.email "sonicbld@microsoft.com"
      git config --global user.name "Sonic Automation"
      git config pull.rebase false
      echo $TOKEN | gh auth login --with-token
      echo $AZURE_DEVOPS_EXT_PAT | az devops login
    env:
      TOKEN: $(GITHUB-TOKEN)
      AZURE_DEVOPS_EXT_PAT: $(MSAZURE-TOKEN)
    displayName: Configure
  - ${{each branch in parameters.branches}}:
    - bash: |
        set -ex

        branch=${{branch}}
        git branch -D $branch || true
        git checkout -b $branch --track origin/$branch
        rm -rf ${{ parameters.subs }}
        git reset HEAD --hard
        git clean -xdff
        git status
        git ls-remote --exit-code origin refs/heads/$branch || exit 1
        git ls-remote --exit-code head refs/heads/$branch || exit 2

        git status | grep "^nothing to commit, working tree clean" || exit 3
        for i in {1..10}; do
          git submodule sync
          git submodule update --init ${{ parameters.subs }} && break
          sleep 2
          [[ $i == 10 ]] && exit 1
        done

        prehead=$(git log -n 1 --pretty=format:'%H')

        git pull head $branch --no-commit || true
        git status
        git submodule

        if ! git status | grep "^nothing to commit, working tree clean";then
          # code conflict
          git add ${{ parameters.subs }}
          git reset platform/checkout/cisco-8000.ini
          git checkout platform/checkout/cisco-8000.ini
          if git status | grep "You have unmerged paths";then
            exit 12 #TODO add alert
            CommitID=$(git log $prehead..HEAD --merge --pretty=format:'%H'  | tail -n 1)
            description="<h1>Please merge $CommitID into sonic-buildimage-msft.Do not Cherry-pick!!!</h1>"
            description="code conflict: sonic-net/sonic-buildimage:$branch -> Azure/sonic-buildimage-msft:$branch<br>"
            description+=$(git log $prehead..HEAD --merge --pretty=format:'%h -%d %s (%cs) [%aN]')
            assign="Gen-Hwa Chiang <gechiang@microsoft.com>"
            # update work-item
            az boards work-item update --org https://dev.azure.com/mssonic/ --id $ADO_ID --discussion "$description" -f "Custom Field 1=type_A"
          fi
        fi
        GIT_EDITOR=true git merge --continue || true

        head=$(git log -n 1 --pretty=format:'%H')
        if [[ $prehead == $head ]];then
          echo "======No change after merging...======"
          exit 0
        fi
        echo "======Diff logs======"
        git log $prehead..HEAD --graph --pretty=format:'%h -%d %s (%cs) [%aN]'
        body=$(git log $prehead..HEAD --graph --pretty=format:'%h -%d %s (%cs) [%aN]')
        body='```<br>'$body'<br>```'
        # push code
        git push https://mssonicbld:$TOKEN@github.com/mssonicbld/sonic-buildimage-msft HEAD:sonicbld/$branch-merge -f
        # create PR
        url_=$(gh pr create -R sonic-net/sonic-buildimage-msft -H mssonicbld:sonicbld/$branch-merge -B $branch -t "[code sync] Merge code from sonic-net/sonic-buildimage:$branch to $branch" -b "$body" 2>&1; rc=$?)
        url=$(echo "$url_" | grep -Eo https://github.com/sonic-net/sonic-buildimage-msft/pull/[0-9]* )

        if echo $url_ | grep "already exists:"; then
          gh pr edit $url -b "$body"
        fi
        for (( c=1; c<=RETRY_COUNT; c++ ));do
          echo count: $c
          sleep 60
          gh pr checks $url | grep https || continue
          gh pr checks $url | grep https | grep pending && continue || break
        done
        gh pr merge $url --merge --admin
      env:
        TOKEN: $(GITHUB-TOKEN)
        AZURE_DEVOPS_EXT_PAT: $(MSAZURE-TOKEN)
      condition: always()
      displayName: '${{branch}} code merge'
