# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

resources:
  repositories:
  - repository: buildimage
    type: github
    name: sonic-net/sonic-buildimage
    ref: master
    endpoint: sonic-net

trigger: none
pr: none

stages:
- stage: Build
  pool: sonicbld
  variables:
    ARCH: amd64
    PLATFORM: ${{ replace(variables['Build.DefinitionName'], 'sonic-buildimage.simple.', '') }}
    DEFAULT_CONTAINER_REGISTRY: 'publicmirror.azurecr.io'
    SONIC_SLAVE_DOCKER_DRIVER: 'overlay2'
    DOCKER_BUILDKIT: 0
    DOCKER_BUILD_TIMEOUT: 3600
    MIRROR_SNAPSHOT: y
    SONIC_VERSION_CONTROL_COMPONENTS: 'deb,py2,py3,web,git,docker'
    ENABLE_DOCKER_BASE_PULL: y

  jobs:
  - job: build
    timeoutInMinutes: 300
    steps:
    - checkout: buildimage
      clean: true
    - checkout: self
      clean: true
    - bash: |
        set -ex
        cd sonic-buildimage
        commit=$(git log --format=%h -n 1 --before "$(date -d "$(DELAY) day ago" -I) 00:00")
        if [[ "$(TIMESTAMP)" != "" ]]; then  commit=$(git log --format=%h -n 1 --before "$(TIMESTAMP)");fi
        git reset $commit --hard
        make init
        yes | make reset
        git status
        git submodule
        git apply ../sonic-pipelines/azure-pipelines/patch
        git add .
        git commit -m draft || true
      displayName: make init
    - bash: |
        set -ex
        cd sonic-buildimage
        make configure
      displayName: make config
    - bash: |
        set -ex
        cd sonic-buildimage
        make target/sonic-$PLATFORM.bin SONIC_BUILD_JOBS=$(nproc) SONIC_DPKG_CACHE_SOURCE=/nfs/dpkg_cache/$PLATFORM SONIC_DPKG_CACHE_METHOD=rcache
      displayName: make image
   
