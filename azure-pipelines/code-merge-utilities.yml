pr: none
trigger: none

schedules:
- cron: "0 0 * * *"
  displayName: Daily
  branches:
    include:
    - main
  always: true

parameters:
- name: branches
  type: object
  default:
  - 202205

resources:
  repositories:
  - repository: utilities
    type: github
    name: sonic-net/sonic-utilities
    endpoint: build

pool:
  vmImage: 'ubuntu-20.04'

steps:
  - checkout: utilities
    clean: true
  - bash: |
      set -ex
      git remote add utilities-msft https://mssonicbld:$TOKEN@github.com/Azure/sonic-utilities.msft
      git remote add utilities-sonicbld https://mssonicbld:$TOKEN@github.com/mssonicbld/sonic-utilities.msft
      git remote update
      git config --global user.email "sonicbld@microsoft.com"
      git config --global user.name "Sonic Automation"
      git config pull.rebase false
      echo $TOKEN | gh auth login --with-token
    env:
      TOKEN: $(SONICBLD_GIT_PAT)
    displayName: Configure
  - ${{each branch in parameters.branches}}:
    - bash: |
        set -ex

        branch=${{branch}}
        git branch -D $branch || true
        git checkout -b $branch --track utilities-msft/$branch
        git reset HEAD --hard
        git clean -xdff

        git ls-remote --exit-code origin refs/heads/$branch || exit 1
        git ls-remote --exit-code utilities-msft refs/heads/$branch || exit 1

        curr_tag="$branch-"+$(date +%F)+".pre-merge"
        post_tag="$branch-"+$(date +%F)+".post-merge"
        git tag ${curr_tag}

        if ! git pull origin $branch --no-edit; then
          assign="Gen-Hwa Chiang <gechiang@microsoft.com>"
          assign="Shilong Liu <shilongliu@microsoft.com>"
          CommitID=$(git log utilities-msft/$branch..HEAD --merge --pretty=format:'%H'  | tail -n 1)
          git status
          exit 1

          DESCRIPTION="<h1>Please merge $CommitID into sonic-utilities.msft.Do not Cherry-pick!!!</h1>"
          body=$(git log utilities-msft/$branch..HEAD --merge --pretty=format:'%h -%d %s (%cs) [%aN]')
          DESCRIPTION+=$body
          echo "$DESCRIPTION"
          # check if the workitem already exist
          az boards work-item show --org https://dev.azure.com/msazure/ --id $(ADO_PARENT) > workitem_parent
          child_count=$(cat workitem_prent | jq '[ .relations[] | select(.attributes.name | contains("Child")) ] | length')
          for (( i==0; i<$child_count; i++ ))
          do
            chiledid=$(cat workitem_prent | jq -r "[ .relations[] | select(.attributes.name | contains(\"Child\")) ] | .[$i].url" | awk -F/ '{print$NF}')
            az boards work-item show --org https://dev.azure.com/msazure/ --id $chiledid > $chiledid
            title=$(cat $chiledid | jq -r '.fields."System.Title"')
            state=$(cat $chiledid | jq -r '.fields."System.State"')
            if [[ "$title" == "code conflict: sonic-utilities/$branch -> sonic-utilities.msft/$branch" ]] && [[ "$state" != "Done" ]] && [[ "$state" != "Removed" ]];then
              echo "WorkItem already exist: $chiledid"
              az boards work-item update --org https://dev.azure.com/msazure/ --id $chiledid --discussion $DESCRIPTION
              echo "WorkItem updated: $chiledid"
              $ASSIGNEDTO=''
              break
            fi
          done

          echo "##vso[task.setvariable variable=ASSIGNEDTO]$ASSIGNEDTO"
          echo "##vso[task.setvariable variable=DESCRIPTION]$DESCRIPTION"
          git merge --abort
          echo "ASSIGNEDTO: $ASSIGNEDTO"
          exit 1
        fi

        head_tag=$(git tag --contains HEAD)

        if echo $head_tag | grep $curr_tag; then
          echo "======No change after merging ...======"
          exit 0
        else
          echo "======Diff logs======"
          git log utilities-msft/$branch..HEAD --pretty=format:'%h -%d %s (%cs) [%aN]'
          body=$(git log utilities-msft/$branch..HEAD --pretty=format:'%h -%d %s (%cs) [%aN]')
          echo "======merge finished======"
        fi
        # push code
        git push --set-upstream utilities-sonicbld HEAD:sonicbld/$branch-merge -f
        # craete PR
        url_=$(gh pr create -R Azure/sonic-utilities.msft -H mssonicbld:sonicbld/$branch-merge -B $branch -a "gechiang" -t "Merge code from sonic-utilities/$branch" -b "$body" 2>&1; rc=$?)
        url=$(echo "$url_" | grep -Eo https://github.com/Azure/sonic-utilities.msft/pull/[0-9]* )
        [[ "$rc" == "0" ]] || gh pr edit $url --add-assignee gechiang -b "$body"
        sleep 10
        count=1
        while true;do
          (( $count < $(RETRY_COUNT) )) || { echo "PR check timeout!";exit 1; }
          ((count++))
          sleep 60
          echo count: $count
          gh pr checks $url | grep https || continue
          gh pr checks $url | grep https | grep -v pass && continue
          gh pr merge $url --merge --admin
        done
      condition: always()
      displayName: '${{branch}} code merge'
    - task: CreateWorkItem@1
      inputs:
        workItemType: 'task'
        title: 'code conflict: sonic-utilities/${{branch}} -> sonic-utilities.msft/${{branch}}'
        assignedTo: '$(ASSIGNEDTO)'
        areaPath: '$(ADO_AREA)'
        iterationPath: '$(ADO_ITERATION)'
        fieldMappings: |
          Description=$(DESCRIPTION)
        linkWorkItems: true
        linkType: 'System.LinkTypes.Hierarchy-Reverse'
        linkTarget: 'id'
        targetId: '$(ADO_PARENT)'
      condition: ne(variables.ASSIGNEDTO, '')
      displayName: Create ${{branch}} workitem
